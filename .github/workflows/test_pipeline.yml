name: Ejecutar pruebas automatizadas

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  
    environment: pr

    permissions:
      contents: read
      security-events: write  # Permiso necesario para Dependency Graph

    steps:
      - name: Checkout del código fuente
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Instalar dependencias con Maven
        run: mvn clean install -DskipTests

      - name: Compilar código Java
        run: mvn compile

      - name: Ejecutar pruebas en orden
        run: |
          mvn test -Dtest=orangeHrm.runners.RunnerCamposVacios || true
          mvn test -Dtest=orangeHrm.runners.RunnerLogFallido || true
          mvn test -Dtest=orangeHrm.runners.RunnerLoginExit || true
          mvn test -Dtest=orangeHrm.runners.RunnerUserVacio || true

      - name: Generar dependency graph en formato JSON
        run: mvn dependency:resolve -DoutputFile=dependencies.json -DoutputType=json

      - name: Subir dependency graph a GitHub
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               -d @dependencies.json \
               https://api.github.com/repos/AFSC1624/<TU_REPO>/prueba-automatizacion-catIX/snapshots


      - name: Verificar reportes de pruebas
        run: |
          if [ -d "target/surefire-reports" ]; then
            ls -lah target/surefire-reports
          else
            echo "No se encontraron reportes de pruebas."
          fi

      - name: Publicar dependency graph como artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph
          path: dependencies.json
